//__HEAD__
var Me=Object.create,B=Object.defineProperty,je=Object.getPrototypeOf,Oe=Object.prototype.hasOwnProperty,Fe=Object.getOwnPropertyNames,He=Object.getOwnPropertyDescriptor;var Ae=r=>B(r,"__esModule",{value:!0});var ke=(r,e,t)=>{if(e&&typeof e=="object"||typeof e=="function")for(let s of Fe(e))!Oe.call(r,s)&&s!=="default"&&B(r,s,{get:()=>e[s],enumerable:!(t=He(e,s))||t.enumerable});return r},m=r=>ke(Ae(B(r!=null?Me(je(r)):{},"default",r&&r.__esModule&&"default"in r?{get:()=>r.default,enumerable:!0}:{value:r,enumerable:!0})),r);function M(r){let e;return r?(e=r.toIterable)?e.call(r):r:[]}var Xe=Symbol.for("#__initor__"),Ye=Symbol.for("#__inited__"),Ze=Symbol.for("#__hooks__"),qe=Symbol.for("#type"),et=Symbol.for("#__listeners__");function E(r,e=null){let t={},s=/\$\$\d+\$\$/,n=function(i){return t[i]||(t[i]=e?e(i):{})},o=function(i,a){if(typeof a=="string"){if(a[0]=="$"&&s.test(a))return n(a)}else if(typeof i=="string"&&i[0]=="$"&&s.test(i)){let h=n(i);return Object.assign(h,a),h}return a};return JSON.parse(r,o)}function L(r,e){var t,s,n,o;let l={},i={added:[],changed:[],removed:[],all:[],urls:{}};if(r.assets)for(let a=0,h=M(r.assets),f=h.length;a<f;a++){let u=h[a],c=u.originalPath||u.path;l[c]=u,u.url&&((t=e.urls)[s=u.url]||(t[s]=u))}for(let a=0,h=M(e.assets||[]),f=h.length;a<f;a++){let u=h[a],c=u.originalPath||u.path,g=l[c];u.url&&r.urls&&(r.urls[u.url]=u),g?(g.hash!=u.hash&&(g.invalidated=Date.now(),g.replacedBy=u,u.replaces=g,i.changed.push(u),i.all.push(u),g==r.main&&(i.main=u)),n=l[c],delete l[c]):(i.added.push(u),i.all.push(u))}for(let a=0,h=Object.keys(l),f=h.length,u,c;a<f;a++)u=h[a],c=l[u],c.removed=Date.now(),i.all.push(c);for(let a=0,h=M(i.all),f=h.length;a<f;a++){let u=h[a];(i[o=u.type]||(i[o]=[])).push(u)}return i.removed=Object.values(l),e.changes=i,e}var N=m(require("events")),$=m(require("fs")),_=m(require("path"));var z=Symbol.for("#__initor__"),J=Symbol.for("#__inited__"),U=Symbol.for("#__hooks__"),De=Symbol.for("#refresh"),W=Symbol.for("#__init__"),j=Symbol.for("#manifest"),V=Symbol.for("#absPath"),O=Symbol.for("#raw"),G=Symbol.for("#watch"),K=Symbol(),Q=class{constructor(e){this[j]=e}get absPath(){return this[V]||(this[V]=this[j].resolve(this))}get name(){return _.default.basename(this.path)}get body(){return this.readSync()}readSync(){return $.default.readFileSync(this.absPath,"utf-8")}pipe(e){return $.default.createReadStream(this.absPath).pipe(e)}toString(){return this.url||this.absPath}},X=class extends N.EventEmitter{static[W](){return this.prototype[z]=K,this}constructor(e={}){var t;super();t=this,this.options=e,this.data={},this.path=e.path,this.refs={},t.reviver=function(s){return new Q(t)},t.init(e.data),this[z]===K&&(this[U]&&this[U].inited(this),this[J]&&this[J]())}get srcdir(){return _.default.resolve(_.default.dirname(this.path),this.data.srcdir)}get outdir(){return _.default.resolve(_.default.dirname(this.path),this.data.outdir)}get changes(){return this.data.changes||{}}get inputs(){return this.data.inputs}get outputs(){return this.data.outputs}get assets(){return this.data.assets}get urls(){return this.data.urls||{}}get main(){return this.data.main}get cwd(){return process.cwd()}get raw(){return this.data[O]}resolve(e){return e._=="input"?_.default.resolve(this.srcdir||this.cwd,e.path):e._=="output"?_.default.resolve(this.outdir,e.path):_.default.resolve(this.cwd,e.path||e)}resolveAssetPath(e){return _.default.resolve(this.outdir,e)}read(e){return $.default.readFileSync(this.resolve(e),"utf-8")}loadFromFile(e){return $.default.existsSync(e)?$.default.readFileSync(e,"utf-8"):"{}"}init(e=null){return(e||this.path)&&this.update(e),this}update(e){if(e==null&&(this.path?e=this.loadFromFile(this.path):console.warn("cannot update manifest without path")),typeof e=="string"){let t=e;e=E(e,this.reviver),e[O]=t}return this.data=L(this.data||{},e),this.data.changes.all.length&&this.emit("change",this.diff,this),this.data.changes.main&&this.emit("change:main",this.data.main,this),this.data.changes}serializeForBrowser(){return this.data[O]}[De](e){return!0}watch(){var e=this;if(this[G]!=!0?(this[G]=!0,!0):!1)return e.path&&!process.env.IMBA_HMR&&$.default.watch(this.path,function(t,s){let n=$.default.existsSync(e.path),o=n&&$.default.statSync(e.path);n&&e.update()})}on(e,t){return this.watch(),super.on(...arguments)}};X[W]();var Y=class{static for(e){return new Proxy({},new this(e))}constructor(e){this.getter=e}get target(){return this.getter()}get(e,t){return this.target[t]}set(e,t,s){return this.target[t]=s,!0}},p=Y.for(function(){return globalThis[j]});var H=m(require("cluster")),v=m(require("fs")),P=m(require("path")),ie=m(require("events"));var F=m(require("perf_hooks")),x=Symbol.for("#spinner"),it=Symbol.for("#__initor__"),ot=Symbol.for("#__inited__"),lt=Symbol.for("#__hooks__"),Ie=Symbol.for("#ctime"),Z=Symbol.for("#IMBA_OPTIONS"),Ee={reset:[0,0],bold:[1,22],dim:[2,22],italic:[3,23],underline:[4,24],inverse:[7,27],hidden:[8,28],strikethrough:[9,29],black:[30,39],red:[31,39],green:[32,39],yellow:[33,39],blue:[34,39],magenta:[35,39],cyan:[36,39],white:[37,39],gray:[90,39],redBright:[91,39],greenBright:[92,39],yellowBright:[93,39],blueBright:[94,39],magentaBright:[95,39],cyanBright:[96,39],whiteBright:[97,39]},y={bold:function(r){return"[1m"+r+"[22m"},red:function(r){return"[31m"+r+"[39m"},green:function(r){return"[32m"+r+"[39m"},yellow:function(r){return"[33m"+r+"[39m"},blue:function(r){return"[94m"+r+"[39m"},gray:function(r){return"[90m"+r+"[39m"},white:function(r){return"[37m"+r+"[39m"},f:function(r,e){let t=Ee[r];return"["+t[0]+"m"+e+"["+t[1]+"m"}};y.warn=y.yellow;y.error=y.red;var C=process.platform!=="win32"||process.env.CI||process.env.TERM==="xterm-256color",Le={info:y.f("yellowBright",C?"\u2139":"i"),success:y.green(C?"\u2714":"\u221A"),warning:y.yellow(C?"\u26A0":"!!"),error:y.red(C?"\xD7":"\u2716"),debug:y.blue(C?"\u2139":"i")},q=["debug","info","success","warning","error","silent"],Ne={"-1":"socket","4":"ip4","6":"ip6"};function ze(r){let e=y.f;return r=r.replace(/https?\:[^\s\n\)\]]+/g,function(t){return e("blueBright",t)}),r=r.replace(/^[\t\s]*\>[^\n]+/gm,function(t){return e("bold",t)}),r=r.replace(/\t/g,"  "),r=r.replace(/^/gm,"  "),r}function ee(r,...e){let t=y.f;return r=r.replace(/\%([\w\.]+)/g,function(s,n){let o=e.shift();if(n=="markdown")return ze(o);if(n=="kb")return t("dim",(o/1e3).toFixed(1)+"kb");if(n=="path"||n=="bold")return t("bold",o);if(n=="dim")return t("dim",o);if(n=="address"){let l=Ne[o.addressType];return o.port?t("blueBright",[o.address||"http://127.0.0.1",o.port].join(":")):t("blueBright",l)}else{if(n=="ms")return t("yellow",Math.round(o)+"ms");if(n=="d")return t("blueBright",o);if(n=="red")return t("redBright",o);if(n=="green")return t("greenBright",o);if(n=="yellow")return t("yellowBright",o);if(n=="ref")return t("yellowBright","#"+(o.id||o));if(n=="elapsed"){o!=null&&e.unshift(o);let l=F.performance.now();return t("yellow",Math.round(l)+"ms")}else if(n=="heap"){o!=null&&e.unshift(o);let l=process.memoryUsage().heapUsed/1024/1024;return t("yellow",l.toFixed(2)+"mb")}else return o}}),[r,...e]}var te=null,re=null,se=class{static get main(){return re||(re=new this)}constructor({prefix:e=null,loglevel:t}={}){this[Ie]=Date.now(),this.prefix=e?ee(...e)[0]:"",this.loglevel=t||process.env.IMBA_LOGLEVEL||globalThis[Z]&&globalThis[Z].loglevel||"info"}write(e,...t){if(q.indexOf(e)<q.indexOf(this.loglevel))return this;let s=Le[e]||e,[n,...o]=ee(...t);return this.prefix&&(n=this.prefix+n),this[x]&&this[x].isSpinning?(e=="success"&&(this[x].clear(),console.log(s+" "+n,...o),this[x].frame()),this[x].text=n):console.log(s+" "+n,...o)}debug(...e){return this.write("debug",...e)}log(...e){return this.write("info",...e)}info(...e){return this.write("info",...e)}warn(...e){return this.write("warn",...e)}error(...e){return this.write("error",...e)}success(...e){return this.write("success",...e)}ts(...e){return this.write("debug",...e,F.performance.now())}spinner(){}get[x](){return te}get proxy(){var e=this;let t=function(...s){return e.info(...s)};return t.info=e.info.bind(e),t.warn=e.warn.bind(e),t.error=e.error.bind(e),t.debug=e.debug.bind(e),t.success=e.success.bind(e),t.ts=e.ts.bind(e),t.logger=e,t}async time(e,t){let s=Date.now();if(t){let n=await t();return this.info(""+e+" %ms",Date.now()-s),n}}},ne=new se().proxy;var Je=m(require("module")),oe=m(require("http")),ft=m(require("https")),le=m(require("http2"));function d(r){let e;return r?(e=r.toIterable)?e.call(r):r:[]}var ae=Symbol.for("#setup"),ue=Symbol.for("#__initor__"),he=Symbol.for("#__inited__"),fe=Symbol.for("#__hooks__"),pe=Symbol.for("#__init__"),ce=Symbol.for("#setup?"),me=Symbol.for("#watch"),Ue=Symbol.for("#dom"),We=Symbol.for("#server"),Ve=Symbol.for("#raw"),de=Symbol(),A={html:{"Content-Type":"text/html"},js:{"Content-Type":"text/javascript"},mjs:{"Content-Type":"text/javascript"},json:{"Content-Type":"application/json"},css:{"Content-Type":"text/css"},otf:{"Content-Type":"font/otf"},ttf:{"Content-Type":"font/ttf"},woff:{"Content-Type":"font/woff"},woff2:{"Content-Type":"font/woff2"},svg:{"Content-Type":"image/svg+xml"},avif:{"Content-Type":"image/avif"},gif:{"Content-Type":"image/gif"},png:{"Content-Type":"image/png"},apng:{"Content-Type":"image/apng"},webp:{"Content-Type":"image/webp"},jpg:{"Content-Type":"image/jpeg"},jpeg:{"Content-Type":"image/jpeg"},bmp:{"Content-Type":"image/bmp"},webm:{"Content-Type":"video/webm"},weba:{"Content-Type":"audio/webm"},avi:{"Content-Type":"video/x-msvideo"},mp3:{"Content-Type":"audio/mpeg"},mp4:{"Content-Type":"video/mp4"},m4a:{"Content-Type":"audio/m4a"},mpeg:{"Content-Type":"video/mpeg"},wav:{"Content-Type":"audio/wav"},ogg:{"Content-Type":"audio/ogg"},ogv:{"Content-Type":"video/ogg"},oga:{"Content-Type":"audio/ogg"},opus:{"Content-Type":"audio/opus"}},w=globalThis.process,ge=class extends Set{call(e,...t){var s;s=[];for(let n of d(this))s.push(n[e](...t));return s}close(e={}){var t;t=[];for(let s of d(this))t.push(s.close(e));return t}reload(e={}){var t;t=[];for(let s of d(this))t.push(s.reload(e));return t}broadcast(e,...t){var s;s=[];for(let n of d(this))s.push(n.broadcast(e,...t));return s}emit(e,t){var s;s=[];for(let n of d(this))s.push(n.emit(e,t));return s}},S=new ge,be=new(class extends ie.EventEmitter{static[pe](){return this.prototype[ue]=de,this}constructor(){var e;super(...arguments);e=this,this.autoreload=!1,this.state={},H.default.isWorker&&w.on("message",function(t){if(e.emit("message",t),t[0]=="emit")return e.emit(...t.slice(1))}),this[ue]===de&&(this[fe]&&this[fe].inited(this),this[he]&&this[he]())}[ae](){var e=this;if(!!(this[ce]!=!0?(this[ce]=!0,!0):!1))return e.on("reloading",function(t){var s;console.log("is reloading - from outside"),e.state.reloading=!0,s=[];for(let n of d(S))s.push(n.pause());return s}),e.on("reloaded",async function(t){var s;e.state.reloaded=!0,console.log("is reloaded - from outside"),s=[];for(let o of d(S))s.push(o.close());let n=s;return await Promise.all(n),w.exit(0)}),e.on("manifest:change",function(t){if(w.env.IMBA_HMR)return p.update(t)}),e.on("manifest:error",function(t){if(w.env.IMBA_HMR)return p.errors=t,S.broadcast("errors",p.errors)}),!0}send(e){if(w.send instanceof Function)return w.send(e)}on(e,t){return e=="change"&&this.watch(),super.on(...arguments)}watch(){var e=this;if(this[me]!=!0?(this[me]=!0,!0):!1)return p.on("change:main",function(){return e.emit("change",p)})}reload(){if(!(this.isReloading!=!0?(this.isReloading=!0,!0):!1))return this;if(this.state.reloading=!0,!w.env.IMBA_SERVE){console.warn("not possible to gracefully reload servers not started via imba start");return}this.send("reload")}}[pe]()),ye=class{constructor(e,t={}){this.url=e,[this.path,this.query]=e.split("?"),this.ext=P.default.extname(this.path),this.headers={"Content-Type":"text/plain","Access-Control-Allow-Origin":"*","cache-control":"public"},Object.assign(this.headers,A[this.ext.slice(1)]||{})}respond(e,t){let s=p.urls[this.url],n=this.headers,o=s?p.resolve(s):p.resolveAssetPath("public"+this.path);if(!o)return console.log("found no path for",s,this.url),t.writeHead(404,{}),t.end();if(s&&(s.ttl>0&&(n["cache-control"]="max-age="+s.ttl),s.imports)){let l=[];for(let i=0,a=d(s.imports),h=a.length;i<h;i++){let f=a[i];l.push("<"+f.url+">; rel=modulepreload; as=script")}n.Link=l.join(", ")}return v.default.access(o,v.default.constants.R_OK,function(l){if(l)return console.log("could not find path",o),t.writeHead(404,{}),t.end();try{let i=v.default.createReadStream(o);return t.writeHead(200,n),i.pipe(t)}catch(i){return t.writeHead(503,{}),t.end()}})}createReadStream(){return v.default.createReadStream(this.path)}pipe(e){return this.createReadStream().pipe(e)}},_e=class{static wrap(e,t={}){return new this(e,t)}constructor(e,t){var s=this;S.add(this),this.id=Math.random(),this.options=t,this.closed=!1,this.paused=!1,this.server=e,this.clients=new Set,this.stalledResponses=[],this.assetResponders={},w.env.IMBA_PATH&&(this.devtoolsPath=P.default.resolve(w.env.IMBA_PATH,"dist","hmr.js")),this.scheme=e instanceof oe.default.Server?"http":"https";let n=this.server._events.request,o=globalThis[Ue];e.off("request",n),n[We]=this,e.on("listening",function(){let l=s.server.address(),i=l.address;(i=="::"||i=="0.0.0.0")&&(i="localhost");let a=""+s.scheme+"://"+i+":"+l.port+"/";return ne.info("listening on %bold",a)}),p.on("change",function(l,i){return s.broadcast("manifest",i.data[Ve])}),s.handler=function(l,i){var a;let h=l instanceof le.Http2ServerRequest,f=l.url,u="/__assets__/";if(s.paused||s.closed)return i.statusCode=302,i.setHeader("Location",l.url),h||i.setHeader("Connection","close"),s.closed?(h&&l.stream.session.close(),i.end()):s.stalledResponses.push(i);if(f=="/__hmr__.js"&&s.devtoolsPath){let b=v.default.createReadStream(s.devtoolsPath);return i.writeHead(200,A.js),b.pipe(i)}if(f=="/__hmr__"){let b={"Content-Type":"text/event-stream","Cache-Control":"no-cache"};return h||(b.Connection="keep-alive"),i.writeHead(200,b),s.clients.add(i),s.broadcast("init",p.serializeForBrowser(),[i]),l.on("close",function(){return s.clients.delete(i)}),!0}if(f.indexOf(u)==0||p.urls[f])return((a=s.assetResponders)[f]||(a[f]=new ye(f,s))).respond(l,i);let c=l.headers,g;if(h?g=c[":scheme"]+"://"+c[":authority"]:g=(l.connection.encrypted?"https":"http")+"://"+c.host,t.static){let b=new URL(f,g),Re=P.default.extname(b.pathname),k=A[Re.slice(1)];if(k){let D=P.default.resolve(p.cwd,"."+b.pathname);if(v.default.existsSync(D)){v.default.readFile(D,function(I,Be){return I?(i.writeHead(500,{}),i.write("Error getting the file: "+I)):(i.writeHead(200,k),i.end(Be))});return}}}if(o){let b=new o.Location(l.url,g);return o.Document.create({location:b},function(){return n(l,i)})}else return n(l,i)},e.on("request",s.handler),e.on("close",function(){return console.log("server is closing!!!")}),H.default.isWorker&&(be[ae](),be.send("serve"))}broadcast(e,t={},s=this.clients){t=JSON.stringify(t);let n="data: "+t+`


`;for(let o of d(s))o.write("event: "+e+`
`),o.write(`id: imba
`),o.write(n);return this}pause(){return(this.paused!=!0?(this.paused=!0,!0):!1)&&this.broadcast("paused"),this}resume(){if(this.paused!=!1?(this.paused=!1,!0):!1)return this.broadcast("resumed"),this.flushStalledResponses()}flushStalledResponses(){for(let e=0,t=d(this.stalledResponses),s=t.length;e<s;e++)t[e].end();return this.stalledResponses=[]}close(){var e=this;return this.pause(),new Promise(function(t){return e.closed=!0,e.server.close(t),e.flushStalledResponses()})}};function we(r,...e){return _e.wrap(r,...e)}var gt=Symbol.for("#__initor__"),bt=Symbol.for("#__inited__"),yt=Symbol.for("#__hooks__"),$e=Symbol.for("#__init__"),ve=Symbol.for("#warned"),T=Symbol.for("#asset"),R=class{static wrap(e){let t=new R(e);return new Proxy(t,t)}constructor(e){this.meta=e}get input(){return p.inputs[this.meta.input]}get asset(){return globalThis._MF_?this.meta:this.input?this.input.asset:null}set(e,t,s){return!0}get(e,t){return this.meta.meta&&this.meta.meta[t]!=null?this.meta.meta[t]:this.asset?t=="absPath"&&!this.asset.absPath?this.asset.url:this.asset[t]:((this.meta[ve]!=!0?(this.meta[ve]=!0,!0):!1)&&console.warn("Asset for '"+this.meta.input+"' not found"),t=="valueOf"?function(){return""}:null)}},xe=class{constructor(e=null){this[$e](e)}[$e](e=null){this.url=e?e.url:void 0,this.meta=e?e.meta:void 0}adoptNode(e){var t;if((t=this.meta)==null?void 0:t.content){for(let s=this.meta.attributes,n=0,o=Object.keys(s),l=o.length,i,a;n<l;n++)i=o[n],a=s[i],e.setAttribute(i,a);e.innerHTML=this.meta.content}return this}toString(){return this.url}toStyleString(){return"url("+this.url+")"}};function Se(r){var e,t;if(r[T])return r[T];if(r.type=="svg")return r[T]||(r[T]=new xe(r));if(r.input){let s=globalThis._MF_&&globalThis._MF_[r.input];return s&&(Object.assign(r,s),r.toString=function(){return this.absPath}),r[T]||(r[T]=R.wrap(r))}return r}var Ce=m(require("express"));var Te=Se({input:"entry:app/index.html"});var Pe=(0,Ce.default)();Pe.get(/.*/,function(r,e){return r.accepts(["image/*","html"])!="html"?e.sendStatus(404):e.send(Te.body)});we(Pe.listen(process.env.PORT||3e3));
//__FOOT__
//# sourceMappingURL=data:application/json;base64,
